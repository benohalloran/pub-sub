#
# Autogenerated by Thrift Compiler (1.0.0-dev)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'pubsub_types'

module Concord
  module PubSub
    module PubSubConsumer
      class Client
        include ::Thrift::Client

        def receive(topic, message)
          send_receive(topic, message)
          recv_receive()
        end

        def send_receive(topic, message)
          send_message('receive', Receive_args, :topic => topic, :message => message)
        end

        def recv_receive()
          result = receive_message(Receive_result)
          return
        end

      end

      class Processor
        include ::Thrift::Processor

        def process_receive(seqid, iprot, oprot)
          args = read_args(iprot, Receive_args)
          result = Receive_result.new()
          @handler.receive(args.topic, args.message)
          write_result(result, oprot, 'receive', seqid)
        end

      end

      # HELPER FUNCTIONS AND STRUCTURES

      class Receive_args
        include ::Thrift::Struct, ::Thrift::Struct_Union
        TOPIC = 1
        MESSAGE = 2

        FIELDS = {
          TOPIC => {:type => ::Thrift::Types::STRING, :name => 'topic'},
          MESSAGE => {:type => ::Thrift::Types::STRING, :name => 'message'}
        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

      class Receive_result
        include ::Thrift::Struct, ::Thrift::Struct_Union

        FIELDS = {

        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

    end

  end
end
